#Importing the libraries
import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

#Importing the dataset
dataset = pd.read_csv('Data.csv')

#Creating matrix of dependent and independent variable vectors
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values

print (X)
print (y)

#Identifying missing data
missing_data = df.isnull().sum()
print("Missing data: \n", missing_data)

#Taking care of missing data in the dataset
from sklearn.impute import SimpleImputer
imputer = SimpleImputer(missing_values=np.nan, strategy = "mean")
imputer.fit(X[:, 1:3])
(X[:, 1:3]) = imputer.transform(X[:, 1:3])
print(X)

#Encoding categorical data
#Encoding independent variable
from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers = [('encoder', OneHotEncoder(), [0], remainder = 'passthrough')
X = np.array(ct.fit_transform(X))
print(X)

#Encoding dependent varible
from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
le.fit_transform(y)
print(y)

#Splitting dataset into training set and test set
from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.2, random_state = 0)

print(X_train)
print(X_test)
print(y_train)
print(y_test)

#feature scaling
from sklearn.preprocessing import StandardScalar
sc = StandardScalar()
X_train[:, 3:] = sc.fit_transform(X_train[:, 3:])
X_train[:, 3:] = sc.transform(X_test[:, 3:])

print(X_train)
print(X_test)




